--dodac ms domenowy bedacy klientem dla tego klienta
--narysowac arch.

-dodac eureke 
-dodac sleuth
http://www.baeldung.com/spring-cloud-sleuth-single-application
https://codecouple.pl/2017/07/21/17-spring-boot-distributed-tracing-zipkin-i-sleuth/

---!
Sleuth also provides tracing across multiple applications. 
By creating RestTemplate as a bean, sleuth will automatically add an interceptor to the RestTemplate. 
The interceptor will add tracing headers to outbound requests. 

--dodac feintclient

https://codecouple.pl/2017/06/23/16-spring-boot-cloud-config/

W tym pliku ustawiamy nazwę aplikacji spring.application.name=config-client. Nazwa ta powinna być odpowiednia dla nazwy pliku properties który znajduje się w repozytorium (w naszym przypadku jest to config-client). Kolejnym elementem jest ustawienie adresu serwera konfiguracji, spring.cloud.config.uri=http://localhost:8888. Wartość http://localhost:8888 jest wartością domyślną, więc tak naprawdę wpis ten jest nadmiarowy (zostawiam dla czytelności).
http://localhost:8888/glupi_kontroler/default

https://spring.io/guides/gs/centralized-configuration/

-co robi:
1. jest za zuulem
2. korzysta z config_server


"Instancje serwisów po uruchomieniu rejestrują się discovery service. Na tej podstawie w sposób dynamiczny odbywa się routowanie ruchu przez front service. "

--dodaje hysterix
https://codecouple.pl/2017/11/24/23-spring-boot-hystrix/
https://spring.io/guides/gs/circuit-breaker/
